Natural Language,Ground truth,gpt_4o_mini,gpt_4,claude_3
"Red forever, Blue eventually",G(x1) & F(x2),G x1 & F x2,G(x1) & F(x2),G(x1) & F(x2)
"At any point, if the engine is on, all future states will alternate between the engine being off and on. ",G(x1 -> (X(!x1) & X(X(x1)))),G (engine_on -> (X engine_off U X engine_on)),G(x1 -> (X(x1 <-> X(x1)))),G(x1 -> ((!x1 U x1) & (X(!x1 U x1))))
"It always holds that whenever x1 is true, it is false in the next state, and x1 is true in the state after the next.",G(x1 -> X(!x1) & X(X(x1))),G (x1 -> ( !X x1 & X x1 )),G((x1 -> (X(!x1) & X(X(x1))))),G((x1) -> (X(!x1) & X(X(x1))))
" the robot is not in B, or, if it is, in the next state it will not be in B until it has been to A.",(x2->X(!x2 U x1)),!x2 | (x2 -> X(!x2 U x1)) ,!x1 | (x1 -> (X(!x1 U x2))),(!x1) | (x1 -> X(!x1 U x2))
An upwards travelling lift at the second floor does not change its direction when   it has passengers wishing to go to the fifth floor,G(x1 & x2 &x3 -> (x2 U x4)),G (x1 & x2 & x3 -> !x4), G ((x1 & x2 & x4) -> !x3),G((x1 & x2 & x3 & x4) -> X(x2))
It is always the case that if the you dont have a passport or a ticket then you cannot board a flight next,G ((!x1 | !x2) -> X !x3),G ((!x1 | !x2) -> X !x3),G ((!(x1 | x2)) -> !X x3),G((!x1 | !x2) -> X(!x3))
"After the button is pressed, the light will turn red until the elevator arrives at the floor and the doors open.”",x1 -> X ( x2 U ( x3 & x4 ) ),x1 -> (x2 U (x3 & x4)),X(x1 -> (x2 U (x3 & x4))),G(x1 -> (X(x2 U (x3 & x4))))
Jack got 50 in his midterm exam but he didn't want to fail that course and Jack had 100 in his final.,x1 & x2 & X(x3),x1 & x2 & x3,x1 & G(x2) & x3,(x1 & x2) & X(x3)
x2 and x3 will become true on the same step x1 will become true the step after x2 becomes true x4 will be true until x1 is true x2 will be true at some point,G(X(x2)->X(x3)) & G(x1 -> X(x2)) & G(x4 U x1) & F(x2),(x2 & x3) -> (X x1) U (x4 U x1) & F x2,(x2 & x3) & (X x1) & (x4 U x1) & (F x2),(X(x1 & x2 & x3) & (x4 U x1) & F(x2))
x3 is always true if x1 and x2 are true in the previous state. x3 will eventually be true.,G(X((x1 & x2) -> x3) & F(x3)),(G (x1 & x2 -> X x3)) & F x3,G((X(x1 & x2)) -> x3) & F(x3),(X(x1 & x2) -> G(x3)) & F(x3)
"There are 2 clients who perform read/write on the same file. Only one client can write at a time and while writing no one can read the file. x1 is true if client 1 is writing, x2 is true if client 2 is writing, x3 is true is true if client 1 is reading, x4 is true if client 2 is reading.",G(!(x1&x3) &!(x2&x4) & !(x2&x3) &!(x1&x4) & ((x2|x3)  ->!(x1|x4))),G ( (x1 & x2) -> false ) & G ( (x1 -> !(x3 | x4)) & (x2 -> !(x3 | x4)) ) ,!(x1 & x2) & !(x1 & (x3 | x4)) & !(x2 & (x3 | x4)),G((!x1 | !x2) & (!x1 | (!x3 & !x4)) & (!x2 | (!x3 & !x4)))
Considering x1 and x2 as two threads both attempting to add lock on a variable. describe the rule that &quot;No more than one thread can have that lock&quot;. Take true as success on locking and false as failure.,G((x1 & !x2) | (!x1 & x2) | (!x1 & !x2)),G (!(x1 & x2)),G((x1 -> !x2) & (x2 -> !x1)),G(!x1 | !x2)
x1 cannot be true three states in a row,G((x1 & X(x1)) -> X(X(!x1))),G ! (x1 & X x1 & X X x1),G(!(x1 & X(x1) & X(X(x1)))),!(x1 & X(x1) & X(X(x1)))
x1 is true in exactly one state.,F(x1) & G(x1 -> !X(F(x1))),F x1 & G (x1 -> !(X x1)) ,F(x1 & (G(!x1 U (x1 & G(!x1))))),F(x1) & G(x1 -> X(!x1 U !x1))
it is always the case that in the next state x1 is true if and only if x2 is true if and only if in the next state x2 is false.,G(X(x1) <-> (x2 <-> X(!x2))),G (X x1 <-> (x2 <-> X !x2)),G ((X x1 <-> x2) <-> X !x2),G((X(x1) <-> X(!x2)) & (X(x1) <-> x2))
"x2 is always true, whereas x1 is only sometimes true.",G(x2)&!G(x1),G x2 & F x1,G(x2) & F(x1),G(x2) & F(x1)
"If x1 is true, then x2 must have just transitioned from true to false.",G(X(x1) -> (x2 & !X(x2))),G(x1 -> X(!x2 & Xx2)),x1 -> (X(x2) & !X(x2)),x1 -> (!x2 & X(!x2 U (x2 & !X x2)))
"x1 will never be true or it'll keep being true, at least occasionally, forever",G(!x1) | G(F(x1)),G(!x1 | F(x1)),!G(x1) | GF(x1),G(!x1 | GFx1)
"Whenever Red, it is off in the next state and on again in the state after that.",G(x1-> X(!x1) & X X(x1)),G (Red -> (X !x1 & X X x1)),G(x1 -> (X!x2 & XXx3)),G(x1 -> (!x2 & X(!x2 & X(x2))))
E now implies E in 3 steps,x1 -> X(X(X(x1))),E -> X(X(X(E))),x1 -> X(X(X(x1))),x1 -> X(X(X(x1)))
There are at least two states in which the Blue light is on,F(x1 & X(F(x1))),F (x1 & X(x1)),F x1 & F x2,F(x1 & X(F(x1)))
"Blue on in 1, off in 2, alts evermore",x1 & G(x1 -> X(!x1 & X(x1))),G(x1 & X!x1 U (X(x2 & X!x2))),G((X x1) & (X X !x1) & (X !x1 U (!x1 & X x1))),(x1 & X!x1 & GF(!x1 & Xx1))
Red is on exactly once.,!x1 U (x1 & G(!X(x1))),G (x1 -> (F (!x1 U (!x1)))) & G (!x1 -> (F (x1 U (!x1)))),F x1 & G ((x1 -> ! X x1) & (! x1 -> X (! x1 U x1))),!(F(G(!x1)) & F(G(x1))) & F(x1) & F(G(!x1))
"always r, eventually b",(x1 U x2) & G(x1),G x1 & F x2,G(x1) & F(x2),G(x1) & F(x2)
"if red, must have !red in future",x1 -> F(!x1),red -> F!red,x1 -> F(!x1),x1 -> F(!x1)