Natural Language,Atomic Proposition,Ground Truth,AST
It previously held that if x1 was true then x2 was true before that.,"x1: x1, x2: x2",O(x1 -> H(x2)),"Once(LImplies(AtomicProposition(""x1""),Historically(AtomicProposition(""x2""))))"
"Whenever x1 was true, it becomes false in the previous state and true again in the state before that.",x1: x1,H(x1 -> Y(!x1 & Y(x1))),"Historically(LImplies(AtomicProposition(""x1""),Yesterday(LAnd(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1""))))))"
x1 was true sometime before 4 or more transitions.,x1: x2,O(Y(Y(Y(Y(x1))))),"Once(Yesterday(Yesterday(Yesterday(Yesterday(AtomicProposition(""x1""))))))"
At some point x1 was true and x2 was false before that.,"x1: x1, x2: x2",O(x1 & H(!x2)),"Once(LAnd(AtomicProposition(""x1""),Historically(Not(AtomicProposition(""x2"")))))"
"Whenever x1 was true, x1 must be false in the past since x2 held (and x2 will held at some point in the past).","x1: x1, x2: x2",H(x1 -> (!x1 S x2)),"Historically(LImplies(AtomicProposition(""x1""),Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x2""))))"
x1 was true at some point and x2 was historically false.,"x1: x1, x2: x2",O(x1 & H(!x2)),"Once(LAnd(AtomicProposition(""x1""),Historically(Not(AtomicProposition(""x2"")))))"
"If x1 was ever true at some point, x2 must historically be true.","x1: x1, x2: x2",H(x1 -> H(x2)),"Historically(LImplies(AtomicProposition(""x1""),Historically(AtomicProposition(""x2""))))"
"Whenever x1 was true, x2 will be true at some point in the past.","x1: x1, x2: x2",H(x1 -> O(x2)),"Historically(LImplies(AtomicProposition(""x1""),Once(AtomicProposition(""x2""))))"
"Whenever x1 held, it cannot held again since x2 does.","x1: x1, x2: x2",H(x1 -> (!x1 S x2)),"Historically(LImplies(AtomicProposition(""x1""),Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x2""))))"
"If x1, then it was historically the case that x2 was true since x3 was false.","x1: x1, x2: x2, x3: x3",H(x1 -> (x2 S !x3)),"Historically(LImplies(AtomicProposition(""x1""),Since(AtomicProposition(""x2""), Not(AtomicProposition(""x3"")))))"
"Every time x1 was true, previously x2 was true or the previous x3 was false.","x1: x1, x2: x2, x3: x3",H(x1 -> O(x2 | Y(!x3))),"Historically(LImplies(AtomicProposition(""x1""),Once(LOr(AtomicProposition(""x2""),Yesterday(Not(AtomicProposition(""x3"")))))))"
x1 cannot be true three states in a row.,x1: x1,H(!(x1 & Y(x1) & Y(Y(x1)))),"Historically(Not(LAnd(LAnd(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x1""))),Yesterday(Yesterday(AtomicProposition(""x1""))))))"
x1 was true in exactly one state.,x1: x1,O(x1) & H(!x1 S x1) & H(!x1),"LAnd(LAnd(Once(AtomicProposition(""x1"")),Historically(Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1"")))),Historically(Not(AtomicProposition(""x1""))))"
No more than one thread can have that lock.,"x1: x1, x2: x2",H(!(x1 & x2)),"Historically(Not(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))"
Make x2 held in any and only those states which come before the last state in which x1 held.,"x1: x1, x2: x2",H(x2 <-> O(x1 & H(!x1))),"Historically(LEquiv(AtomicProposition(""x2""),Once(LAnd(AtomicProposition(""x1""),Historically(Not(AtomicProposition(""x1"")))))))"
"Given a request signal x1, the grant signal x2 should previously be asserted.","x1: x1, x2: x2",H(x1 -> O(x2)),"Historically(LImplies(AtomicProposition(""x1""),Once(AtomicProposition(""x2""))))"
"It was never previously false that if x1 was true then x2 and x3 are true, but only before x4 was true (which will happen).","x1: x1, x2: x2, x3: x3, x4: x4",H(!O(x1 & !(x2 & x3)) S x4),"Historically(Since(Not(Once(LAnd(AtomicProposition(""x1""),Not(LAnd(AtomicProposition(""x2""),AtomicProposition(""x3"")))))), AtomicProposition(""x4"")))"
"There are 2 clients who perform read/write on the same file. Only one client can write at a time and while writing no one can read the file. x1 was true if client 1 was writing, x2 was true if client 2 was writing, x3 was true was true if client 1 was reading, x4 was true if client 2 was reading.","x1: x1, x2: x2, x3: x3, x4: x4",H(!(x1 & x2) & !(x1 & (x3 | x4)) & !(x2 & (x3 | x4))),"Historically(LAnd(LAnd(Not(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Not(LAnd(AtomicProposition(""x1""),LOr(AtomicProposition(""x3""),AtomicProposition(""x4""))))),Not(LAnd(AtomicProposition(""x2""),LOr(AtomicProposition(""x3""),AtomicProposition(""x4""))))))"
It was historically true that x1 was true and that x1 will previously become false.,x1: x1,H(x1) & O(!x1),"LAnd(Historically(AtomicProposition(""x1"")),Once(Not(AtomicProposition(""x1""))))"
The pattern of true and false of x1 in the first 3 entries repeats.,x1: x1,H((x1 & Y(!x1) & Y(Y(x1))) <-> Y(Y(Y(x1 & Y(!x1) & Y(Y(x1))))),ERROR
"x1 starts true, and then never again becomes true.",x1: x1,x1 & H(!x1),"LAnd(AtomicProposition(""x1""),Historically(Not(AtomicProposition(""x1""))))"
"x1 will historically be true if x2 was false, unless x3 was also true.","x1: x1, x2: x2, x3: x3",H((!x2 & !x3) -> x1),"Historically(LImplies(LAnd(Not(AtomicProposition(""x2"")),Not(AtomicProposition(""x3""))),AtomicProposition(""x1"")))"
x1 starts true and was true exactly every third state.,x1: x1,x1 & H(Y(Y(Y(x1)))) & H(!x1 & !Y(x1) & !Y(Y(x1))),"LAnd(LAnd(AtomicProposition(""x1""),Historically(Yesterday(Yesterday(Yesterday(AtomicProposition(""x1"")))))),Historically(LAnd(LAnd(Not(AtomicProposition(""x1"")),Not(Yesterday(AtomicProposition(""x1"")))),Not(Yesterday(Yesterday(AtomicProposition(""x1"")))))))"
"If x1 was true two times in a row, it was never true again.",x1: x1,H((x1 & Y(x1)) -> H(!x1)),"Historically(LImplies(LAnd(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x1""))),Historically(Not(AtomicProposition(""x1"")))))"
Only one person was running in the relay race at once.,"x1: x1, x2: x2, x3: x3",H(!(x1 & x2) & !(x2 & x3) & !(x1 & x3)),"Historically(LAnd(LAnd(Not(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Not(LAnd(AtomicProposition(""x2""),AtomicProposition(""x3"")))),Not(LAnd(AtomicProposition(""x1""),AtomicProposition(""x3"")))))"
"For a while, it was never the case that x1 was true and x2 was false at the same time, but before a certain point, x2 will previously historically be true.","x1: x1, x2: x2",O(H(!(x1 & !x2)) & H(x2)),"Once(LAnd(Historically(Not(LAnd(AtomicProposition(""x1""),Not(AtomicProposition(""x2""))))),Historically(AtomicProposition(""x2""))))"
If x1 was true at the beginning then x2 was true at the end.,"x1: x1, x2: x2",x1 -> O(x2),"LImplies(AtomicProposition(""x1""),Once(AtomicProposition(""x2"")))"
x2 historically held if x1 and x3 do not held.,"x1: x1, x2: x2, x3: x3",H((!x1 & !x3) -> x2),"Historically(LImplies(LAnd(Not(AtomicProposition(""x1"")),Not(AtomicProposition(""x3""))),AtomicProposition(""x2"")))"
"x2 was historically true, whereas x1 was only sometimes true.","x1: x1, x2: x2",H(x2) & O(x1) & H(!x1),"LAnd(LAnd(Historically(AtomicProposition(""x2"")),Once(AtomicProposition(""x1""))),Historically(Not(AtomicProposition(""x1""))))"
"If x1 was true, then x2 must have just transitioned from true to false.","x1: x1, x2: x2",H(x1 -> Y(x2 & !x2)),"Historically(LImplies(AtomicProposition(""x1""),Yesterday(LAnd(AtomicProposition(""x2""),Not(AtomicProposition(""x2""))))))"
Trace of x1 was repeated with a period of 5 (x1 at time t+5 will historically be x1 at t).,x1: x1,H(x1 <-> Y(Y(Y(Y(Y(x1)))))),"Historically(LEquiv(AtomicProposition(""x1""),Yesterday(Yesterday(Yesterday(Yesterday(Yesterday(AtomicProposition(""x1""))))))))"
"x1 will never be true, or it'll keep being true, at least occasionally, has always held.",x1: x1,H(!x1) | H(O(x1)),"LOr(Historically(Not(AtomicProposition(""x1""))),Historically(Once(AtomicProposition(""x1""))))"
"Whenever x1 was true, x1 was false and x2 was true in the state before; whenever x2 was true, x1 was false and x1 was true in the state before.","x1: x1, x2: x2",H(x1 -> (!x1 & Y(x2))) & H(x2 -> (!x1 & Y(x1))),"LAnd(Historically(LImplies(AtomicProposition(""x1""),LAnd(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x2""))))),Historically(LImplies(AtomicProposition(""x2""),LAnd(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1""))))))"
"If it at least rains once, or on alternating days (rain being the boolean x1), the bean will previously sprout (x2).","x1: x1, x2: x2",O(x1) -> O(x2),"LImplies(Once(AtomicProposition(""x1"")),Once(AtomicProposition(""x2"")))"
x1 was true exactly twice.,x1: x1,O(x1) & O(Y(x1)) & H(!Y(Y(x1))),"LAnd(LAnd(Once(AtomicProposition(""x1"")),Once(Yesterday(AtomicProposition(""x1"")))),Historically(Not(Yesterday(Yesterday(AtomicProposition(""x1""))))))"
It was previously true that x1 was historically true when x2 and x3 are false.,"x1: x1, x2: x2, x3: x3",O(H(x1 & !x2 & !x3)),"Once(Historically(LAnd(LAnd(AtomicProposition(""x1""),Not(AtomicProposition(""x2""))),Not(AtomicProposition(""x3"")))))"
"For every state, if x1 was true, then x2 and x3 should be false; if x2 or x3 was true, x1 was false.","x1: x1, x2: x2, x3: x3",H((x1 -> (!x2 & !x3)) & ((x2 | x3) -> !x1)),"Historically(LAnd(LImplies(AtomicProposition(""x1""),LAnd(Not(AtomicProposition(""x2"")),Not(AtomicProposition(""x3"")))),LImplies(LOr(AtomicProposition(""x2""),AtomicProposition(""x3"")),Not(AtomicProposition(""x1"")))))"
x1 was historically previously true unless x2 was false and x3's previous state was true.,"x1: x1, x2: x2, x3: x3",H(!(!x2 & Y(x3)) -> O(x1)),"Historically(LImplies(Not(LAnd(Not(AtomicProposition(""x2"")),Yesterday(AtomicProposition(""x3"")))),Once(AtomicProposition(""x1""))))"
It was historically the case that x1 happens immediately before x2.,"x1: x1, x2: x2",H(x2 -> Y(x1)),"Historically(LImplies(AtomicProposition(""x2""),Yesterday(AtomicProposition(""x1""))))"
"If x1 was true in the previous step, then x1 will historically previously be true.","x1: x1, x2: x2, x3: x3",H(Y(x1) -> H(O(x1))),"Historically(LImplies(Yesterday(AtomicProposition(""x1"")),Historically(Once(AtomicProposition(""x1"")))))"
"Either for every 5th time step x1 and x2 are true, or for every 3rd time step x3 was true.","x1: x1, x2: x2, x3: x3",H((Y(Y(Y(Y(Y(x1 & x2)))))) | (Y(Y(Y(x3))))),"Historically(LOr(Yesterday(Yesterday(Yesterday(Yesterday(Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))))),Yesterday(Yesterday(Yesterday(AtomicProposition(""x3""))))))"
It historically held that x1 was true since x2 was false and x3 was true.,"x1: x1, x2: x2, x3: x3",H(x1 S (!x2 & x3)),"Historically(Since(AtomicProposition(""x1""), LAnd(Not(AtomicProposition(""x2"")),AtomicProposition(""x3""))))"
x1 was historically true since both x2 and x3 are once true.,"x1: x1, x2: x2, x3: x3",H(x1 S (x2 & x3)),"Historically(Since(AtomicProposition(""x1""), LAnd(AtomicProposition(""x2""),AtomicProposition(""x3""))))"
x1 was only true when x2 in the previous previous state was not true.,"x1: x1, x2: x2",H(x1 -> Y(Y(!x2))),"Historically(LImplies(AtomicProposition(""x1""),Yesterday(Yesterday(Not(AtomicProposition(""x2""))))))"
"When x1 was true, x2 will previously (but not immediately) be true.","x1: x1, x2: x2",H(x1 -> O(Y(x2))),"Historically(LImplies(AtomicProposition(""x1""),Once(Yesterday(AtomicProposition(""x2"")))))"
"It's historically true that if x1 was true, then in the previous state x1 was false, and x1 was true 2 states ago.",x1: x1,H(x1 -> (Y(!x1) & Y(Y(x1)))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(Not(AtomicProposition(""x1""))),Yesterday(Yesterday(AtomicProposition(""x1""))))))"
x3 was true if and only if x1 and x2 are true in the previous state and x1 and x2 are previously true.,"x1: x1, x2: x2, x3: x3",H(x3 <-> (Y(x1 & x2) & O(x1 & x2))),"Historically(LEquiv(AtomicProposition(""x3""),LAnd(Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))))"
x1 was sometimes true since x2 was true and must be false before (x1).,"x1: x1, x2: x2",H((x1 S x2) & H(!x1)),"Historically(LAnd(Since(AtomicProposition(""x1""), AtomicProposition(""x2"")),Historically(Not(AtomicProposition(""x1"")))))"
"It historically held that before x1 was true, x2 will be true. x3 will not be true since both x1 and x2 are true.","x1: x1, x2: x2, x3: x3",H(x1 -> O(x2)) & H(x3 -> (x1 & x2)),"LAnd(Historically(LImplies(AtomicProposition(""x1""),Once(AtomicProposition(""x2"")))),Historically(LImplies(AtomicProposition(""x3""),LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")))))"
"If (x1 and x2) was previously true, then x1 was false since it was true. Otherwwase, if x2 was previously true, then x1 was also previously true.","x1: x1, x2: x2",H((O(x1 & x2) -> (!x1 S (x1 & x2))) & (O(x2) -> O(x1))),"Historically(LAnd(LImplies(Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Since(Not(AtomicProposition(""x1"")), LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")))),LImplies(Once(AtomicProposition(""x2"")),Once(AtomicProposition(""x1"")))))"
"Given states x1, x2, and x3: historically transitioning in a cycle (e.g., x1 -> x2 -> x3 -> x1 ...).","x1: x1, x2: x2, x3: x3",H((x1 -> Y(x3)) & (x2 -> Y(x1)) & (x3 -> Y(x2))),"Historically(LAnd(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x3""))),LImplies(AtomicProposition(""x2""),Yesterday(AtomicProposition(""x1"")))),LImplies(AtomicProposition(""x3""),Yesterday(AtomicProposition(""x2"")))))"
"If we know that x1 will previously be true, then we know that x2 will be true since x1 was true. Otherwwase, all we know was that x3 was true.","x1: x1, x2: x2, x3: x3",H((O(x1) -> (x2 S x1)) & (!O(x1) -> x3)),"Historically(LAnd(LImplies(Once(AtomicProposition(""x1"")),Since(AtomicProposition(""x2""), AtomicProposition(""x1""))),LImplies(Not(Once(AtomicProposition(""x1""))),AtomicProposition(""x3""))))"
"When x1 was true, then x3 will become true previously before x2 was true.","x1: x1, x2: x2, x3: x3",H(x1 -> O(x2 & O(x3))),"Historically(LImplies(AtomicProposition(""x1""),Once(LAnd(AtomicProposition(""x2""),Once(AtomicProposition(""x3""))))))"
It historically held that x2 was false if x1 was true and x2 was true if x1 was false in the previous state.,"x1: x1, x2: x2",H((x1 -> !x2) & (!x1 -> Y(x2))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Not(AtomicProposition(""x2""))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x2"")))))"
"If any of x1, x2, x3 was true, x4 will be true at some point and stay true before that.","x1: x1, x2: x2, x3: x3, x4: x4",H((x1 | x2 | x3) -> O(H(x4))),"Historically(LImplies(LOr(LOr(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3"")),Once(Historically(AtomicProposition(""x4"")))))"
"When x1, it cannot become x2 immediately or become x3 in less than 3 steps.","x1: x1, x2: x2, x3: x3",H(x1 -> (!Y(x2) & !Y(Y(x3)) & !Y(Y(Y(x3))))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(LAnd(Not(Yesterday(AtomicProposition(""x2""))),Not(Yesterday(Yesterday(AtomicProposition(""x3""))))),Not(Yesterday(Yesterday(Yesterday(AtomicProposition(""x3""))))))))"
x1 repeatedly flips truth values (goes from true to false and back again as always held).,x1: x1,H((x1 -> Y(!x1)) & (!x1 -> Y(x1))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1"")))))"
"If x1 was never true, then x2 and x3 will historically alternate, with only one being true at a time.","x1: x1, x2: x2, x3: x3",H(!x1 -> ((x2 -> Y(!x3)) & (x3 -> Y(!x2)))),"Historically(LImplies(Not(AtomicProposition(""x1"")),LAnd(LImplies(AtomicProposition(""x2""),Yesterday(Not(AtomicProposition(""x3"")))),LImplies(AtomicProposition(""x3""),Yesterday(Not(AtomicProposition(""x2"")))))))"
"If x2 was true and x1 was true and x3 was true, then it previously held that x1, x2, and x3 are historically true.","x1: x1, x2: x2, x3: x3",H((x1 & x2 & x3) -> O(H(x1 & x2 & x3))),"Historically(LImplies(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3"")),Once(Historically(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3""))))))"
"If the previous value of x1 was false, then x2 must have just transitioned from true to false, and x3 must have just transitioned from false to true.","x1: x1, x2: x2, x3: x3",H(Y(!x1) -> (Y(x2 & !x2) & Y(!x3 & x3))),"Historically(LImplies(Yesterday(Not(AtomicProposition(""x1""))),LAnd(Yesterday(LAnd(AtomicProposition(""x2""),Not(AtomicProposition(""x2"")))),Yesterday(LAnd(Not(AtomicProposition(""x3"")),AtomicProposition(""x3""))))))"
"If at some point in time, x1 becomes true and stays true, was it historically true that x1 previously becomes true or was it previously true that x1 was historically true?",x1: x1,H(O(H(x1)) | H(O(x1))),"Historically(LOr(Once(Historically(AtomicProposition(""x1""))),Historically(Once(AtomicProposition(""x1"")))))"
Amy will not be present in the lounge if Catherine was there unless Barbara was also there to mediate.,"“Amy”: x1, “Barbara”: x2, “Catherine”: x3",H((x3 & !x2) -> !x1),"Historically(LImplies(LAnd(AtomicProposition(""x3""),Not(AtomicProposition(""x2""))),Not(AtomicProposition(""x1""))))"
"If Barbara and Amy are in the lounge together, Catherine will be hanging out with Barbara regardless of if they hang in the lounge or not.","“Amy”: x1, “Barbara”: x2, “Catherine”: x3",H((x1 & x2) -> x3),"Historically(LImplies(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3"")))"
"Previously, they will all hang out in the lounge together.","x1: x1, x2: x2, x3: x3",O(x1 & x2 & x3),"Once(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3"")))"
"If x1 was historically true, then x2 will historically be true since x3 was false.","x1: x1, x2: x2, x3: x3",H(x1 -> (x2 S !x3)),"Historically(LImplies(AtomicProposition(""x1""),Since(AtomicProposition(""x2""), Not(AtomicProposition(""x3"")))))"
x2 and x3 will become true on the same step; x1 will become true the step before x2 becomes true; x4 will be true since x1 was true; x2 will be true at some point.,"x1: x1, x2: x2, x3: x3, x4: x4",O(x2 & x3) & H(Y(x2) -> x1) & H(x4 S x1) & O(x2),"LAnd(LAnd(LAnd(Once(LAnd(AtomicProposition(""x2""),AtomicProposition(""x3""))),Historically(LImplies(Yesterday(AtomicProposition(""x2"")),AtomicProposition(""x1"")))),Historically(Since(AtomicProposition(""x4""), AtomicProposition(""x1"")))),Once(AtomicProposition(""x2"")))"
"Call x1 the variable of, did I take my medicine? I try to historically take my medicine on time, but sometimes I forget. However, I never forget more than once in a row.",x1: x1,H(!x1 -> Y(x1)),"Historically(LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1""))))"
Parents with high education will historically have children who would also pursue education.,"x1: x1, x2: x2",H(x1 -> x2),"Historically(LImplies(AtomicProposition(""x1""),AtomicProposition(""x2"")))"
"The variable x1 will be true at least once, but at some point it will never be true again.",x1: x1,O(x1) & H(!x1),"LAnd(Once(AtomicProposition(""x1"")),Historically(Not(AtomicProposition(""x1""))))"
"If x1 was true, x2 and x3 were false.","x1: x1, x2: x2, x3: x3",H(x1 -> (!x2 & !x3)),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Not(AtomicProposition(""x2"")),Not(AtomicProposition(""x3"")))))"
"Whenever x1 was true, x2 was true since x3 was true, and x3 was true if x2 was true.","x1: x1, x2: x2, x3: x3",H(x1 -> (x2 S x3)) & H(x2 -> x3),"LAnd(Historically(LImplies(AtomicProposition(""x1""),Since(AtomicProposition(""x2""), AtomicProposition(""x3"")))),Historically(LImplies(AtomicProposition(""x2""),AtomicProposition(""x3""))))"
"If x1's previous state was true, x2 will previously be true.","x1: x1, x2: x2",H(Y(x1) -> O(x2)),"Historically(LImplies(Yesterday(AtomicProposition(""x1"")),Once(AtomicProposition(""x2""))))"
x1 was historically true and x2 was false for at least the first two time steps.,"x1: x1, x2: x2",H(x1) & Y(!x2) & Y(Y(!x2)),"LAnd(LAnd(Historically(AtomicProposition(""x1"")),Yesterday(Not(AtomicProposition(""x2"")))),Yesterday(Yesterday(Not(AtomicProposition(""x2"")))))"
It was historically true that x1 was true since x2 was previously false.,"x1: x1, x2: x2",H(x1 S O(!x2)),"Historically(Since(AtomicProposition(""x1""), Once(Not(AtomicProposition(""x2"")))))"
"If x1 was previously true, then x2 will be true at some point before.","x1: x1, x2: x2",O(x1) -> O(x2),"LImplies(Once(AtomicProposition(""x1"")),Once(AtomicProposition(""x2"")))"
"It was historically the case that when x1 and x2 are true, then sometimes x3 was true.","x1: x1, x2: x2, x3: x3",H((x1 & x2) -> O(x3)),"Historically(LImplies(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),Once(AtomicProposition(""x3""))))"
"If it's historically sunny outside (x1), then the plants will historically previously grow (x2) and you will also previously get a sunburn (x3).","x1: x1, x2: x2, x3: x3",H(x1 -> (O(x2) & O(x3))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Once(AtomicProposition(""x2"")),Once(AtomicProposition(""x3"")))))"
"x1 was true only when x3 was false, since the reverse was true previously.","x1: x1, x2: x2, x3: x3",H(x1 -> !x3) S O(x3),"Since(Historically(LImplies(AtomicProposition(""x1""),Not(AtomicProposition(""x3"")))), Once(AtomicProposition(""x3"")))"
The truth value of x1 alternates at each state.,x1: x1,H((x1 -> Y(!x1)) & (!x1 -> Y(x1))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1"")))))"
"x1 was true in the previous state, or x1 was true in all states.",x1: x1,H(Y(x1) | H(x1)),"Historically(LOr(Yesterday(AtomicProposition(""x1"")),Historically(AtomicProposition(""x1""))))"
"x1 was historically true since x2 was true or x3 was true, and x3 will be true previously.","x1: x1, x2: x2, x3: x3",H(x1 S (x2 | x3)) & O(x3),"LAnd(Historically(Since(AtomicProposition(""x1""), LOr(AtomicProposition(""x2""),AtomicProposition(""x3"")))),Once(AtomicProposition(""x3"")))"
x3 was historically true if x1 and x2 are true in the previous state. x3 will previously be true.,"x1: x1, x2: x2, x3: x3",H((Y(x1 & x2)) -> x3) & O(x3),"LAnd(Historically(LImplies(Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),AtomicProposition(""x3""))),Once(AtomicProposition(""x3"")))"
x2 was never true or x2 was true since x1 was true.,"x1: x1, x2: x2",H(!x2 | (x2 S x1)),"Historically(LOr(Not(AtomicProposition(""x2"")),Since(AtomicProposition(""x2""), AtomicProposition(""x1""))))"
Jack got 50 in his midterm exam but he didn't want to fail that course and Jack had 100 in his final.,"“Jack got 50 in hwas midterm exam” : x1, “Jack had 100 in hwas final”: x2",O(x1) & H(!x2) & O(x2),"LAnd(LAnd(Once(AtomicProposition(""x1"")),Historically(Not(AtomicProposition(""x2"")))),Once(AtomicProposition(""x2"")))"
x1 and x2 will previously become true at the same time.,"x1: x1, x2: x2",O(x1 & x2),"Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")))"
"Whenever the Red light was on, it turns off in the previous state and on again in the state before that.","""Red light"" : x1",H(x1 -> (Y(!x1) & Y(Y(x1)))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(Not(AtomicProposition(""x1""))),Yesterday(Yesterday(AtomicProposition(""x1""))))))"
"The Red light was on in exactly one state, but not necessarily the first state.","""Red light"" : x1",O(x1) & H(!x1 S x1) & H(!x1),"LAnd(LAnd(Once(AtomicProposition(""x1"")),Historically(Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1"")))),Historically(Not(AtomicProposition(""x1""))))"
The Red light cannot stay lit for three states in a row.,"""Red light"" : x1",H(!(x1 & Y(x1) & Y(Y(x1)))),"Historically(Not(LAnd(LAnd(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x1""))),Yesterday(Yesterday(AtomicProposition(""x1""))))))"
"Whenever the Red light was on, the Blue light will turn on at some point.","""Red light"" : x1, ""Blue"": x2",H(x1 -> O(x2)),"Historically(LImplies(AtomicProposition(""x1""),Once(AtomicProposition(""x2""))))"
"The Red light was lit for a finite number of steps, and then never again becomes lit.","""Red light"" : x1",O(x1) & H(!x1),"LAnd(Once(AtomicProposition(""x1"")),Historically(Not(AtomicProposition(""x1""))))"
"Once the pump has been turned on, an initial pressure reading will be taken and dwasplayed, and before that the dwasplayed value for the pressure will be updated every 2 seconds.","""Pump on"" : x1, ""initial pressure reading"" : x2, ""update pressure reading"" : x3",H(x1 -> O(x2)) & H(x2 -> Y(Y(x2))),"LAnd(Historically(LImplies(AtomicProposition(""x1""),Once(AtomicProposition(""x2"")))),Historically(LImplies(AtomicProposition(""x2""),Yesterday(Yesterday(AtomicProposition(""x2""))))))"
Move to the Red room.,"""Red room"" : x1",O(x1),"Once(AtomicProposition(""x1""))"
Go through the blue room to the green room.,"""blue room"" : x1, ""green room"" : x2",O(x1 & O(x2)),"Once(LAnd(AtomicProposition(""x1""),Once(AtomicProposition(""x2""))))"
Go to the blue room but avoid the Red room.,"""blue room"" : x1, ""red room"" : x2",O(x1 & H(!x2)),"Once(LAnd(AtomicProposition(""x1""),Historically(Not(AtomicProposition(""x2"")))))"
Go through Red or yellow to get to green.,"""Red room"" : x1, ""yellow room"" : x2, ""green room"" : x3",O((x1 | x2) & O(x3)),"Once(LAnd(LOr(AtomicProposition(""x1""),AtomicProposition(""x2"")),Once(AtomicProposition(""x3""))))"
Find the science library.,"""science library"" : x1",O(x1),"Once(AtomicProposition(""x1""))"
Go to FedEx office and then go to CVS.,"""fedex office"" : x1, ""cvs"" : x2",O(x1 & O(x2)),"Once(LAnd(AtomicProposition(""x1""),Once(AtomicProposition(""x2""))))"
Stay away from Main St and find Chipotle.,"""main st"" : x1, ""chipotle"" : x2",H(!x1) & O(x2),"LAnd(Historically(Not(AtomicProposition(""x1""))),Once(AtomicProposition(""x2"")))"
Stay on Main St and find the bookstore.,"""bookstore"" : x1 , ""main st"" : x2",H(x1) & O(x2),"LAnd(Historically(AtomicProposition(""x1"")),Once(AtomicProposition(""x2"")))"
"If b held, then in the previous step, c held since a held or historically c held.","a : a, b : b, c : c",H(b -> Y(c S a)),"Historically(LImplies(AtomicProposition(""b""),Yesterday(Since(AtomicProposition(""c""), AtomicProposition(""a"")))))"
"If b held at some point, a has to held somewhere beforehand.","a : a, b : b",H(b -> O(a)),"Historically(LImplies(AtomicProposition(""b""),Once(AtomicProposition(""a""))))"
"One of the following apps held at all instances: a, b, c.","a : a, b : b, c : c",H(a | b | c),"Historically(LOr(LOr(AtomicProposition(""a""),AtomicProposition(""b"")),AtomicProposition(""c"")))"
Every a was previously followed by an e.,"a : a, e : e",H(a -> O(e)),"Historically(LImplies(AtomicProposition(""a""),Once(AtomicProposition(""e""))))"
It was never the case that a and b held at the same time.,"a : a, b : b",H(!(a & b)),"Historically(Not(LAnd(AtomicProposition(""a""),AtomicProposition(""b""))))"
"Whenever a was enabled, b was enabled three steps later.","a : a, b : b",H(a -> Y(Y(Y(b)))),"Historically(LImplies(AtomicProposition(""a""),Yesterday(Yesterday(Yesterday(AtomicProposition(""b""))))))"
"e must held everywhere since, from some point on, d held infinitely often in the past.","e : e, d : d",H(e S O(H(d))),"Historically(Since(AtomicProposition(""e""), Once(Historically(AtomicProposition(""d"")))))"
"Whenever a held, b held as well.","a : a, b : b",H(a -> b),"Historically(LImplies(AtomicProposition(""a""),AtomicProposition(""b"")))"
Both a and b held in every time step.,"a : a, b : b",H(a & b),"Historically(LAnd(AtomicProposition(""a""),AtomicProposition(""b"")))"
"a held historically, and whenever b held, c does not held.","a : a, b : b, c : c",H(a) & H(b -> !c),"LAnd(Historically(AtomicProposition(""a"")),Historically(LImplies(AtomicProposition(""b""),Not(AtomicProposition(""c"")))))"
"If every a was previously followed by a b, then c needs to held infinitely often in the past in the past.","a : a, b : b, c : c",H(a -> O(b)) -> H(O(c)),"LImplies(Historically(LImplies(AtomicProposition(""a""),Once(AtomicProposition(""b"")))),Historically(Once(AtomicProposition(""c""))))"
"If a held infinitely often in the past, then b held infinitely often in the past as well.","a : a, b : b",H(O(a)) -> H(O(b)),"LImplies(Historically(Once(AtomicProposition(""a""))),Historically(Once(AtomicProposition(""b""))))"
Either a or b held infinitely often in the past.,"a : a, b : b",H(O(a)) | H(O(b)),"LOr(Historically(Once(AtomicProposition(""a""))),Historically(Once(AtomicProposition(""b""))))"
a never held from some point in time on.,a : a,O(H(!a)),"Once(Historically(Not(AtomicProposition(""a""))))"
"Whenever a and b do not held, c held previously.","a : a, b : b, c : c",H(!a & !b -> O(c)),"Historically(LImplies(LAnd(Not(AtomicProposition(""a"")),Not(AtomicProposition(""b""))),Once(AtomicProposition(""c""))))"
"a and b never occur at the same time, but one of them held in every time step.","a : a, b : b",H(!(a & b)) & H(a | b),"LAnd(Historically(Not(LAnd(AtomicProposition(""a""),AtomicProposition(""b"")))),Historically(LOr(AtomicProposition(""a""),AtomicProposition(""b""))))"
"Whenever the inputs a and b are the same, the outputs c and d are the same.","a : a, b : b, c : c, d : d",H((a <-> b) -> (c <-> d)),"Historically(LImplies(LEquiv(AtomicProposition(""a""),AtomicProposition(""b"")),LEquiv(AtomicProposition(""c""),AtomicProposition(""d""))))"
a can only happened if b happened before.,"a : a, b : b",H(a -> O(b)),"Historically(LImplies(AtomicProposition(""a""),Once(AtomicProposition(""b""))))"
"Once a happened, b will not happen again.","a : a, b : b",H(a -> H(!b)),"Historically(LImplies(AtomicProposition(""a""),Historically(Not(AtomicProposition(""b"")))))"
a and b will not occur at the same time.,"a : a, b : b",H(!(a & b)),"Historically(Not(LAnd(AtomicProposition(""a""),AtomicProposition(""b""))))"
"Whenever a held and b held in the previous step, then c held one step before b.","a : a, b : b, c : c",H(a & Y(b) -> Y(Y(c))),"Historically(LImplies(LAnd(AtomicProposition(""a""),Yesterday(AtomicProposition(""b""))),Yesterday(Yesterday(AtomicProposition(""c"")))))"
"Whenever a held, b held previously from the previous step on.","a : a, b : b",H(a -> O(Y(b))),"Historically(LImplies(AtomicProposition(""a""),Once(Yesterday(AtomicProposition(""b"")))))"
a held in every fifth step.,a : a,H(Y(Y(Y(Y(Y(a)))))),"Historically(Yesterday(Yesterday(Yesterday(Yesterday(Yesterday(AtomicProposition(""a"")))))))"
"Whenever a held, b must held in the previous two steps.","a : a, b : b",H(a -> (Y(b) & Y(Y(b)))),"Historically(LImplies(AtomicProposition(""a""),LAnd(Yesterday(AtomicProposition(""b"")),Yesterday(Yesterday(AtomicProposition(""b""))))))"
"If a held, b would have previously held in the past","a : a, b : b",H(a -> O(b)),"Historically(LImplies(AtomicProposition(""a""),Once(AtomicProposition(""b""))))"
"a must historically held, but if it exceeds, it allows two timestamps to recover.",a : a,H(a) & H(!a -> (Y(!a) & Y(Y(!a)))),"LAnd(Historically(AtomicProposition(""a"")),Historically(LImplies(Not(AtomicProposition(""a"")),LAnd(Yesterday(Not(AtomicProposition(""a""))),Yesterday(Yesterday(Not(AtomicProposition(""a""))))))))"
a can only held every three timestamps.,a : a,a & H(a -> (Y(!a) & Y(Y(!a))) & Y(Y(Y(a))))),ERROR
Every a was followed by a b.,"a : a, b : b",H(a -> O(b)),"Historically(LImplies(AtomicProposition(""a""),Once(AtomicProposition(""b""))))"
"Previously, a and b held.","a : a, b : b",O(a & b),"Once(LAnd(AtomicProposition(""a""),AtomicProposition(""b"")))"
Both a and b held previously.,"a : a, b : b",O(a) & O(b),"LAnd(Once(AtomicProposition(""a"")),Once(AtomicProposition(""b"")))"
It was historically the case that a was the same as b in the previous step.,"a : a, b : b",H(a <-> Y(b)),"Historically(LEquiv(AtomicProposition(""a""),Yesterday(AtomicProposition(""b""))))"
a held since b held or historically a held.,"a : a, b : b",H(a S b) | H(a),"LOr(Historically(Since(AtomicProposition(""a""), AtomicProposition(""b""))),Historically(AtomicProposition(""a"")))"
,,,MISSING_FORMULA
,,,MISSING_FORMULA
"Globally, if a held, then c was true since b.","a : a, b : b, c : c",H(a -> (c S b)),"Historically(LImplies(AtomicProposition(""a""),Since(AtomicProposition(""c""), AtomicProposition(""b""))))"
"a and b never occur at the same time, but one of them held in every time step.","a : a, b : b",H(!(a & b)) & H(a | b),"LAnd(Historically(Not(LAnd(AtomicProposition(""a""),AtomicProposition(""b"")))),Historically(LOr(AtomicProposition(""a""),AtomicProposition(""b""))))"
a can only happen if b happened before.,"a : a, b : b",H(a -> O(b)),"Historically(LImplies(AtomicProposition(""a""),Once(AtomicProposition(""b""))))"
a held since b held or historically a held.,"a : a, b : b",H(a S b) | H(a),"LOr(Historically(Since(AtomicProposition(""a""), AtomicProposition(""b""))),Historically(AtomicProposition(""a"")))"
A user cannot join and leave in the same state.,"“join"" : x1, “leave” : x2",H(!(x1 & x2)),"Historically(Not(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))"
An object version cannot be added and removed in the same state.,"“add"" : x1, “remove” : x2",H(!(x1 & x2)),"Historically(Not(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))"
A subject cannot be created and simultaneously killed. Also the subject cannot perform read or update operations in the same state in which it was created ,"“create"" : x1, “kill"" : x2, “read"" : x3, “update"" : x4",H(!(x1 &  (x2 | x3 | x4))),"Historically(Not(LAnd(AtomicProposition(""x1""),LOr(LOr(AtomicProposition(""x2""),AtomicProposition(""x3"")),AtomicProposition(""x4"")))))"
A version being updated to say v2 cannot be simultaneously read or further updated by any subject in the same state,"“update” : x1,”read” : x2",H(!(x1 &  (x2 | x1))),"Historically(Not(LAnd(AtomicProposition(""x1""),LOr(AtomicProposition(""x2""),AtomicProposition(""x1"")))))"
"If x1 was true, then previously x2 was true since x1 was false.","x1: x1, x2: x2",H(x1 -> O(x2 S !x1)),"Historically(LImplies(AtomicProposition(""x1""),Once(Since(AtomicProposition(""x2""), Not(AtomicProposition(""x1""))))))"
"If the state before the previous state before the previous state x1 was true, then previously x2 was false and x3 was true.","x1: x1, x2: x2, x3: x3",H(Y(Y(x1)) -> O(!x2 & x3)),"Historically(LImplies(Yesterday(Yesterday(AtomicProposition(""x1""))),Once(LAnd(Not(AtomicProposition(""x2"")),AtomicProposition(""x3"")))))"
"It was historically the case that x1 was true since x2 was true, and it was historically the case that x1 and x2 are false.","x1: x1, x2: x2",H(x1 S x2) & H(!x1 & !x2),"LAnd(Historically(Since(AtomicProposition(""x1""), AtomicProposition(""x2""))),Historically(LAnd(Not(AtomicProposition(""x1"")),Not(AtomicProposition(""x2"")))))"
It was historically the case that previously the state before the previous state before the previous state x1 was true.,x1: x1,H(O(Y(Y(x1)))),"Historically(Once(Yesterday(Yesterday(AtomicProposition(""x1"")))))"
"It was historically the case that if x1 was true, then x2 was false, and if x2 was true, then x1 was false.","x1: x1, x2: x2",H((x1 -> !x2) & (x2 -> !x1)),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Not(AtomicProposition(""x2""))),LImplies(AtomicProposition(""x2""),Not(AtomicProposition(""x1"")))))"
"It was historically the case that if the state before the previous state before the previous state x1 was true, then x2 was true.","x1: x1, x2: x2",H(Y(Y(x1)) -> x2),"Historically(LImplies(Yesterday(Yesterday(AtomicProposition(""x1""))),AtomicProposition(""x2"")))"
"Previously, it was historically the case that x1 was previously true.",x1: x1,O(H(O(x1))),"Once(Historically(Once(AtomicProposition(""x1""))))"
"It was historically the case that if in the previous state x1 was false, then x1 was true.",x1: x1,H(Y(!x1) -> x1),"Historically(LImplies(Yesterday(Not(AtomicProposition(""x1""))),AtomicProposition(""x1"")))"
"It was historically the case that if x1 was true, then x2 was false and x3 was false, and it was historically the case that if x2 or x3 was true, then x1 was false.","x1: x1, x2: x2, x3: x3",H((x1 -> (!x2 & !x3)) & ((x2 | x3) -> !x1)),"Historically(LAnd(LImplies(AtomicProposition(""x1""),LAnd(Not(AtomicProposition(""x2"")),Not(AtomicProposition(""x3"")))),LImplies(LOr(AtomicProposition(""x2""),AtomicProposition(""x3"")),Not(AtomicProposition(""x1"")))))"
"It was historically the case that if x1 was true, then in the previous state x2 was true, and in the state before the previous state x3 was false.","x1: x1, x2: x2, x3: x3",H(x1 -> (Y(x2) & Y(Y(!x3)))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(AtomicProposition(""x2"")),Yesterday(Yesterday(Not(AtomicProposition(""x3"")))))))"
"It was historically the case that if previously x1 was true, then in the previous state x1 was false, and if x2 was true, then x2 was false.","x1: x1, x2: x2",H(O(x1) -> Y(!x1)) & H(x2 -> Y(!x2)),"LAnd(Historically(LImplies(Once(AtomicProposition(""x1"")),Yesterday(Not(AtomicProposition(""x1""))))),Historically(LImplies(AtomicProposition(""x2""),Yesterday(Not(AtomicProposition(""x2""))))))"
"It was historically the case that if x1 was false, then it was historically the case that x1 was true or previously x2 was true.","x1: x1, x2: x2",H(!x1 -> (H(x1) | O(x2))),"Historically(LImplies(Not(AtomicProposition(""x1"")),LOr(Historically(AtomicProposition(""x1"")),Once(AtomicProposition(""x2"")))))"
"It was historically the case that if x1 was historically true, then previously x2 was true.","x1: x1, x2: x2",H(H(x1) -> O(x2)),"Historically(LImplies(Historically(AtomicProposition(""x1"")),Once(AtomicProposition(""x2""))))"
"x1 was true since x2 happens to be true, or it was historically the case that if x1 was true, then in the previous state x1 was false.","x1: x1, x2: x2",H(x1 S x2) | H(x1 -> Y(!x1)),"LOr(Historically(Since(AtomicProposition(""x1""), AtomicProposition(""x2""))),Historically(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1""))))))"
"Was it historically the case that in the previous state x1 was true, and previously if x1 was true, then x2 was true?","x1: x1, x2: x2",H(Y(x1)) & H(x1 -> O(x2)),"LAnd(Historically(Yesterday(AtomicProposition(""x1""))),Historically(LImplies(AtomicProposition(""x1""),Once(AtomicProposition(""x2"")))))"
"If in the previous state x1 was false since x1 was true, then previously x1 was false.",x1: x1,H(Y(!x1 S x1) -> O(!x1)),"Historically(LImplies(Yesterday(Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1""))),Once(Not(AtomicProposition(""x1"")))))"
"If previously x2 and x1 are true, then x1 was true since x2 happens to be true, or in the previous state x2 was true.","x1: x1, x2: x2",H(O(x1 & x2) -> (x1 S x2 | Y(x2))),"Historically(LImplies(Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),LOr(Since(AtomicProposition(""x1""), AtomicProposition(""x2"")),Yesterday(AtomicProposition(""x2"")))))"
"If x1 was true, then previously it was historically the case that in the previous state x1 was true.",x1: x1,H(x1 -> O(H(Y(x1)))),"Historically(LImplies(AtomicProposition(""x1""),Once(Historically(Yesterday(AtomicProposition(""x1""))))))"
"If previously x1, x2, and x3 are true, then x4 was true, and if it was not the case that previously x1, x2, and x3 are true, then x4 was false.","x1: x1, x2: x2, x3: x3, x4: x4",H(O(x1 & x2 & x3) -> x4) & H(!O(x1 & x2 & x3) -> !x4),"LAnd(Historically(LImplies(Once(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3""))),AtomicProposition(""x4""))),Historically(LImplies(Not(Once(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3"")))),Not(AtomicProposition(""x4"")))))"
"It was historically the case that if x1 was false, then x2 was false, and if x2 was false, then x1 was false. And previously x1 and x2 are true.","x1: x1, x2: x2",H((!x1 -> !x2) & (!x2 -> !x1)) & O(x1 & x2),"LAnd(Historically(LAnd(LImplies(Not(AtomicProposition(""x1"")),Not(AtomicProposition(""x2""))),LImplies(Not(AtomicProposition(""x2"")),Not(AtomicProposition(""x1""))))),Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))"
"In the previous state, if x1 was true, then in the state before the previous state before the previous state x2 was true.","x1: x1, x2: x2",H(Y(x1) -> Y(Y(x2))),"Historically(LImplies(Yesterday(AtomicProposition(""x1"")),Yesterday(Yesterday(AtomicProposition(""x2"")))))"
"It was historically the case that x1 was true and x2 was false, and if x1 was true, x2 cannot be true in the same state. Then it was historically the case that x2 was false.","x1: x1, x2: x2",H(x1 & !x2) & H(x1 -> !x2) & H(!x2),"LAnd(LAnd(Historically(LAnd(AtomicProposition(""x1""),Not(AtomicProposition(""x2"")))),Historically(LImplies(AtomicProposition(""x1""),Not(AtomicProposition(""x2""))))),Historically(Not(AtomicProposition(""x2""))))"
"Previously, it was historically the case that x1 was true, or it was historically the case that previously x1 was true.",x1: x1,O(H(x1)) | H(O(x1)),"LOr(Once(Historically(AtomicProposition(""x1""))),Historically(Once(AtomicProposition(""x1""))))"
"If x1 was true, then previously x1 was false, and if x1 was false, then previously x1 was true.",x1: x1,H(x1 -> O(!x1)) & H(!x1 -> O(x1)),"LAnd(Historically(LImplies(AtomicProposition(""x1""),Once(Not(AtomicProposition(""x1""))))),Historically(LImplies(Not(AtomicProposition(""x1"")),Once(AtomicProposition(""x1"")))))"
x1 was true if and only if x2 was true since it was the case that x1 was since x3 was true.,"x1: x1, x2: x2, x3: x3",H(x1 <-> (x2 S (x1 S x3))),"Historically(LEquiv(AtomicProposition(""x1""),Since(AtomicProposition(""x2""), Since(AtomicProposition(""x1""), AtomicProposition(""x3"")))))"
"It was historically the case that x1 and x2 are false, and it was historically the case that x1 or x2 was true.","x1: x1, x2: x2",H(!x1 & !x2) & H(x1 | x2),"LAnd(Historically(LAnd(Not(AtomicProposition(""x1"")),Not(AtomicProposition(""x2"")))),Historically(LOr(AtomicProposition(""x1""),AtomicProposition(""x2""))))"
"It was historically the case that x1 or x2 was true, and in the previous state, it was historically the case that x2 was true.","x1: x1, x2: x2",H(x1 | x2) & H(Y(x2)),"LAnd(Historically(LOr(AtomicProposition(""x1""),AtomicProposition(""x2""))),Historically(Yesterday(AtomicProposition(""x2""))))"
"If it was historically the case that x1 was false and in the previous state x1 was true, then in the previous state previously x2 was true.","x1: x1, x2: x2",H(H(!x1) & Y(x1) -> Y(O(x2))),"Historically(LImplies(LAnd(Historically(Not(AtomicProposition(""x1""))),Yesterday(AtomicProposition(""x1""))),Yesterday(Once(AtomicProposition(""x2"")))))"
It was historically the case that previously x1 was true or previously x2 was true.,"x1: x1, x2: x2",H(O(x1) | O(x2)),"Historically(LOr(Once(AtomicProposition(""x1"")),Once(AtomicProposition(""x2""))))"
"If x1 was true, then in the previous state x1 was false, and previously x2 was true.","x1: x1, x2: x2",H(x1 -> (Y(!x1) & O(x2))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(Not(AtomicProposition(""x1""))),Once(AtomicProposition(""x2"")))))"
"If previously x1 was true, then it was historically the case that x1 was true.",x1: x1,H(O(x1) -> H(x1)),"Historically(LImplies(Once(AtomicProposition(""x1"")),Historically(AtomicProposition(""x1""))))"
"It was historically the case that previously if x1 was true, then in the previous state x2 was true since x3 was false.","x1: x1, x2: x2, x3: x3",H(O(x1) -> (Y(x2) S !x3)),"Historically(LImplies(Once(AtomicProposition(""x1"")),Since(Yesterday(AtomicProposition(""x2"")), Not(AtomicProposition(""x3"")))))"
"It was historically the case that previously if x1 was true, then x1 was false.",x1: x1,H(O(x1) -> O(!x1)),"Historically(LImplies(Once(AtomicProposition(""x1"")),Once(Not(AtomicProposition(""x1"")))))"
"It was historically the case that previously it was historically the case that x1 was true, and previously it was historically the case that previously x2 was true.","x1: x1, x2: x2",H(O(H(x1)) & O(H(O(x2)))),"Historically(LAnd(Once(Historically(AtomicProposition(""x1""))),Once(Historically(Once(AtomicProposition(""x2""))))))"
"If Red was initially lit, then it was also lit before three steps.","“red"" : x1",x1 -> Y(Y(Y(x1))),"LImplies(AtomicProposition(""x1""),Yesterday(Yesterday(Yesterday(AtomicProposition(""x1"")))))"
Red was lit before 3 or more steps.,"“red"" : x1",O(Y(Y(Y(x1)))),"Once(Yesterday(Yesterday(Yesterday(AtomicProposition(""x1"")))))"
"If Red was previously lit, then Blue was historically lit.","“red” : x1, “blue” : x2",O(x1) -> H(x2),"LImplies(Once(AtomicProposition(""x1"")),Historically(AtomicProposition(""x2"")))"
"If Red was initially lit, then it was also lit before three steps.",“red” : x1,x1 -> Y(Y(Y(x1))),"LImplies(AtomicProposition(""x1""),Yesterday(Yesterday(Yesterday(AtomicProposition(""x1"")))))"
"Blue was previously lit, and Red was historically lit.","“red” : x1, “blue” : x2",O(x2) & H(x1),"LAnd(Once(AtomicProposition(""x2"")),Historically(AtomicProposition(""x1"")))"
"Whenever Red was lit, it turns off in the previous state and on again in the state before that.",“red” : x1,H(x1 -> (Y(!x1) & Y(Y(x1)))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(Not(AtomicProposition(""x1""))),Yesterday(Yesterday(AtomicProposition(""x1""))))))"
"If the engine was on, the engine will be on 3 states from now.","""Engine on” : x1",H(x1 -> Y(Y(Y(x1)))),"Historically(LImplies(AtomicProposition(""x1""),Yesterday(Yesterday(Yesterday(AtomicProposition(""x1""))))))"
"Before two states have passed, previously the engine before these the previous state will be on.","""Engine on” : x1",H(Y(Y(O(Y(x1))))),"Historically(Yesterday(Yesterday(Once(Yesterday(AtomicProposition(""x1""))))))"
"If the engine previously turns on, then the light was historically on.","""Engine on” : x1, “blue"" : x2",O(x1) -> H(x2),"LImplies(Once(AtomicProposition(""x1"")),Historically(AtomicProposition(""x2"")))"
"The engine will be on since the light turns on, and the engine was historically on.","""Engine on” : x1, ""Light on” : x2",H(x1 S x2) & H(x1),"LAnd(Historically(Since(AtomicProposition(""x1""), AtomicProposition(""x2""))),Historically(AtomicProposition(""x1"")))"
"If the engine was on, then in the previous state the engine was not on, and two states later it turns back on.","""Engine on” : x1",H(x1 -> (Y(!x1) & Y(Y(x1)))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(Not(AtomicProposition(""x1""))),Yesterday(Yesterday(AtomicProposition(""x1""))))))"
It was not the case that once x1 was false.,x1: x1,!O(!x1),"Not(Once(Not(AtomicProposition(""x1""))))"
"It was historically the case that x1 was true, and historically x2 was true since x1 was true, and once x2 remains true.","x1: x1, x2: x2",H(x1) & H(x2 S x1) & O(H(x2)),"LAnd(LAnd(Historically(AtomicProposition(""x1"")),Historically(Since(AtomicProposition(""x2""), AtomicProposition(""x1"")))),Once(Historically(AtomicProposition(""x2""))))"
"It was historically the case that x1 was true and x2 was false, and once x3 was true.","x1: x1, x2: x2, x3: x3",H(x1 & !x2) & O(x3),"LAnd(Historically(LAnd(AtomicProposition(""x1""),Not(AtomicProposition(""x2"")))),Once(AtomicProposition(""x3"")))"
"It was historically the case that once if x1 was true, then once historically x1 will be true.","x1: x1, x2: x2",H(O(x1) -> O(H(x1))),"Historically(LImplies(Once(AtomicProposition(""x1"")),Once(Historically(AtomicProposition(""x1"")))))"
"If x1 was true and x2 was false, then once x1 was false since x2 happens.","x1: x1, x2: x2",H((x1 & !x2) -> O(!x1 S x2)),"Historically(LImplies(LAnd(AtomicProposition(""x1""),Not(AtomicProposition(""x2""))),Once(Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x2"")))))"
"If once x1 and x2 are true, then historically if x1 was true, then x2 was true, and if x2 was true, then x1 was true.","x1: x1, x2: x2",H(O(x1 & x2) -> (H(x1 -> x2) & H(x2 -> x1))),"Historically(LImplies(Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),LAnd(Historically(LImplies(AtomicProposition(""x1""),AtomicProposition(""x2""))),Historically(LImplies(AtomicProposition(""x2""),AtomicProposition(""x1""))))))"
It was not the case that historically x1 was true since historically x1 was false.,x1: x1,!H(x1 S H(!x1)),"Not(Historically(Since(AtomicProposition(""x1""), Historically(Not(AtomicProposition(""x1""))))))"
"Once, if x1 was true, then historically x1 was true since x1 was false.",x1: x1,O(x1 -> H(x1 S !x1)),"Once(LImplies(AtomicProposition(""x1""),Historically(Since(AtomicProposition(""x1""), Not(AtomicProposition(""x1""))))))"
"It was historically the case that if x1 was true, then in the previous state x1 was false, and if x1 was false, then in the previous state x1 will be true.",x1: x1,H((x1 -> Y(!x1)) & (!x1 -> Y(x1))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1"")))))"
It was historically the case that once in the previous state x1 will be true.,x1: x1,H(O(Y(x1))),"Historically(Once(Yesterday(AtomicProposition(""x1""))))"
"It was historically the case that x1 was true, and it was historically the case that x1 was false.",x1: x1,H(x1) & H(!x1),"LAnd(Historically(AtomicProposition(""x1"")),Historically(Not(AtomicProposition(""x1""))))"
"If the state before the previous state x1 was true, then in the previous state x1 was true.",x1: x1,H(Y(Y(x1)) -> Y(x1)),"Historically(LImplies(Yesterday(Yesterday(AtomicProposition(""x1""))),Yesterday(AtomicProposition(""x1""))))"
"Once x1 was true, and it was historically the case that x1 was false.",x1: x1,O(x1) & H(!x1),"LAnd(Once(AtomicProposition(""x1"")),Historically(Not(AtomicProposition(""x1""))))"
"It was historically the case that once x2 was true since, in the previous state, x1 was true.","x1: x1, x2: x2",H(O(x2) S Y(x1)),"Historically(Since(Once(AtomicProposition(""x2"")), Yesterday(AtomicProposition(""x1""))))"
"In the previous state, it was historically the case that if x1 was true, then once x1 was true.",x1: x1,H(Y(x1) -> O(x1)),"Historically(LImplies(Yesterday(AtomicProposition(""x1"")),Once(AtomicProposition(""x1""))))"
"x3 was true since x1 was true, or x3 was historically true, and once x2 was true.","x1: x1, x2: x2, x3: x3",H(x3 S x1) | (H(x3) & O(x2)),"LOr(Historically(Since(AtomicProposition(""x3""), AtomicProposition(""x1""))),LAnd(Historically(AtomicProposition(""x3"")),Once(AtomicProposition(""x2""))))"
"If x1 was true, x1 must be true in the previous state.",x1: x1,H(x1 -> Y(x1)),"Historically(LImplies(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x1""))))"
"Once, it was historically the case that if x1 was true, then in the previous state x1 was true, and in the state before the previous state x1 was false, and historically if x1 was false, then in the previous state x1 was false, and then the state before the previous state was true.",x1: x1,O(H((x1 -> (Y(x1) & Y(Y(!x1)))) & (!x1 -> (Y(!x1) & Y(Y(x1)))))),"Once(Historically(LAnd(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(AtomicProposition(""x1"")),Yesterday(Yesterday(Not(AtomicProposition(""x1"")))))),LImplies(Not(AtomicProposition(""x1"")),LAnd(Yesterday(Not(AtomicProposition(""x1""))),Yesterday(Yesterday(AtomicProposition(""x1""))))))))"
"If x1 was true, then it was historically the case that x2 was false, and once x1 was false since x1 was true.","x1: x1, x2: x2",H(x1 -> (H(!x2) & O(!x1 S x1))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Historically(Not(AtomicProposition(""x2""))),Once(Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1""))))))"
"It was historically the case that x1 was true since x1 was false, and x1 was false since x1 was true.",x1: x1,H(x1 S !x1) & H(!x1 S x1),"LAnd(Historically(Since(AtomicProposition(""x1""), Not(AtomicProposition(""x1"")))),Historically(Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1""))))"
"Once, x1 was true if and only if in the previous state x2 was false, or it was historically the case that x2 was true.","x1: x1, x2: x2",O(x1 <-> (Y(!x2) | H(x2))),"Once(LEquiv(AtomicProposition(""x1""),LOr(Yesterday(Not(AtomicProposition(""x2""))),Historically(AtomicProposition(""x2"")))))"
"It was historically the case that if x2 was true, then it was not the case that once x1 was true, and if x3 was true, then it was not the case that once x2 was true.","x1: x1, x2: x2, x3: x3",H((x2 -> !O(x1)) & (x3 -> !O(x2))),"Historically(LAnd(LImplies(AtomicProposition(""x2""),Not(Once(AtomicProposition(""x1"")))),LImplies(AtomicProposition(""x3""),Not(Once(AtomicProposition(""x2""))))))"
"Once, it was historically the case that x1 was true since x2 was true.","x1: x1, x2: x2",O(H(x1 S x2)),"Once(Historically(Since(AtomicProposition(""x1""), AtomicProposition(""x2""))))"
"If x1 and x2 are true, then in the previous state x3 was true, and in the state before the previous state x3 was false.","x1: x1, x2: x2, x3: x3",H((x1 & x2) -> (Y(x3) & Y(Y(!x3)))),"Historically(LImplies(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),LAnd(Yesterday(AtomicProposition(""x3"")),Yesterday(Yesterday(Not(AtomicProposition(""x3"")))))))"
"If x1 was true, then in the previous state x1 was true, and if in the previous state x1 was true, then it was the case that in the state before the previous state x1 was true.",x1: x1,H(x1 -> Y(x1)) & H(Y(x1) -> Y(Y(x1))),"LAnd(Historically(LImplies(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x1"")))),Historically(LImplies(Yesterday(AtomicProposition(""x1"")),Yesterday(Yesterday(AtomicProposition(""x1""))))))"
"x1 went first, then x2 went, then x3 went.","x1: x1, x2: x2, x3: x3",(x1 & !x2 & !x3) S (x2 & !x3) S x3,"Since(LAnd(LAnd(AtomicProposition(""x1""),Not(AtomicProposition(""x2""))),Not(AtomicProposition(""x3""))), Since(LAnd(AtomicProposition(""x2""),Not(AtomicProposition(""x3""))), AtomicProposition(""x3"")))"
"For a while, it was never the case that x1 was true and x2 was false at the same time, but after some point, x2 remained true.","x1: x1, x2: x2",(H (x1 -> x2)) S (H x2),"Since(Historically(LImplies(AtomicProposition(""x1""),AtomicProposition(""x2""))), Historically(AtomicProposition(""x2"")))"
"x3 had been true if and only if x1 and x2 had been true in the previous state, and x1 and x2 had been true at some point earlier.","x1: x1, x2: x2",H(x3 <-> (Y(x1 & x2) & Y(x1 & x2))),"Historically(LEquiv(AtomicProposition(""x3""),LAnd(Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))))"
"x1 had sometimes been true until x2 became true, and must have been false afterward.","x1: x1, x2: x2",(x1 S !x2) & H(x2 -> !x1),"LAnd(Since(AtomicProposition(""x1""), Not(AtomicProposition(""x2""))),Historically(LImplies(AtomicProposition(""x2""),Not(AtomicProposition(""x1"")))))"
"It had always been the case that once x1 had been true, x2 became true. x3 had not been true until both x1 and x2 had been true.","x1: x1, x2: x2",H((Y(x1) -> x2) & (x3 S (x1 & x2))),"Historically(LAnd(LImplies(Yesterday(AtomicProposition(""x1"")),AtomicProposition(""x2"")),Since(AtomicProposition(""x3""), LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")))))"
"If (x1 and x2) had been true at some point, then x1 had been false until it became true. Otherwise, if x2 had been true, x1 had eventually been true.","x1: x1, x2: x2",((Y(x1 & x2)) -> (!x1 S x1)) & ((Y(x2)) -> Y(x1)),"LAnd(LImplies(Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1""))),LImplies(Yesterday(AtomicProposition(""x2"")),Yesterday(AtomicProposition(""x1""))))"
"Given states x1, x2, and x3: they had always transitioned in a cycle (x1 -> x2 -> x3 -> x1 ...)","x1: x1, x2: x2, x3: x3",H((x1 -> Y(x3)) & (x2 -> Y(x1)) & (x3 -> Y(x2))),"Historically(LAnd(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x3""))),LImplies(AtomicProposition(""x2""),Yesterday(AtomicProposition(""x1"")))),LImplies(AtomicProposition(""x3""),Yesterday(AtomicProposition(""x2"")))))"
"If x1 had never been true, then x2 and x3 had always alternated in being true, with only one being true at a time.","x1: x1, x2: x2, x3: x3",(!Y(x1)) -> H((x2 <-> !x3) & (x3 <-> !x2)),"LImplies(Not(Yesterday(AtomicProposition(""x1""))),Historically(LAnd(LEquiv(AtomicProposition(""x2""),Not(AtomicProposition(""x3""))),LEquiv(AtomicProposition(""x3""),Not(AtomicProposition(""x2""))))))"
"If x1 had always been true, then x2 had been true until x3 had become false.","x1: x1, x2: x2, x3: x3",(H(x1)) -> (x2 S !x3),"LImplies(Historically(AtomicProposition(""x1"")),Since(AtomicProposition(""x2""), Not(AtomicProposition(""x3""))))"
"x2 and x3 had become true in the same step, x1 had become true in the step after x2 had become true, x4 had been true until x1 had been true, and x2 had been true at some point.","x1: x1, x2: x2, x3: x3",(x2 & x3) & Y(x1 & Y(x2)) & (x4 S x1) & Y(x2),"LAnd(LAnd(LAnd(LAnd(AtomicProposition(""x2""),AtomicProposition(""x3"")),Yesterday(LAnd(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x2""))))),Since(AtomicProposition(""x4""), AtomicProposition(""x1""))),Yesterday(AtomicProposition(""x2"")))"
"Blue had been on in state 1, off in 2, and had alternated forever.",“Blue” : x1,H(x1 <-> !Y(x1)),"Historically(LEquiv(AtomicProposition(""x1""),Not(Yesterday(AtomicProposition(""x1"")))))"
"It had always been the case that if x1 had been true, it had been false in the previous state, and vice versa.",x1: x1,H((x1 -> Y(!x1)) & (!x1 -> Y(x1))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1"")))))"
"If x1 had been true in the current state, then it had been true in the previous two states and false in the one before that.",x1: x1,x1 -> (Y(x1) & Y(Y(x1)) & Y(Y(Y(!x1)))),"LImplies(AtomicProposition(""x1""),LAnd(LAnd(Yesterday(AtomicProposition(""x1"")),Yesterday(Yesterday(AtomicProposition(""x1"")))),Yesterday(Yesterday(Yesterday(Not(AtomicProposition(""x1"")))))))"
"It had always been the case that x1 had been true until it had become false, and then false until it had become true.",x1: x1,(x1 S !x1) & (!x1 S x1),"LAnd(Since(AtomicProposition(""x1""), Not(AtomicProposition(""x1""))),Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1"")))"
"At some point, if x1 had been true, then two steps earlier it had always been the case that x1 had been false, or had always remained false.",x1: x1,Y(x1 -> Y(Y(H(!x1))) | H(!x1)),"Yesterday(LImplies(AtomicProposition(""x1""),LOr(Yesterday(Yesterday(Historically(Not(AtomicProposition(""x1""))))),Historically(Not(AtomicProposition(""x1""))))))"
"At some point, it had always been the case that if x1 had been true, then in the previous state x1 had been false, and vice versa.",x1: x1,Y(H((x1 -> Y(!x1)) & (!x1 -> Y(x1)))),"Yesterday(Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1""))))))"
"It had always been the case that x1 or x2 had been true, x1 had held until x2 had held, and x2 had held until x1 had held.","x1: x1, x2: x2",H(x1 | x2) & (x1 S x2) & (x2 S x1),"LAnd(LAnd(Historically(LOr(AtomicProposition(""x1""),AtomicProposition(""x2""))),Since(AtomicProposition(""x1""), AtomicProposition(""x2""))),Since(AtomicProposition(""x2""), AtomicProposition(""x1"")))"
"It had always been the case that if x1 had been true, then afterward x2 or x3 had been true; and that if x1 had been true, x2 or x3 had been false.","x1: x1, x2: x2, x3: x3",H((x1 -> Y(x2 | x3)) & (x1 -> !(x2 | x3))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(LOr(AtomicProposition(""x2""),AtomicProposition(""x3"")))),LImplies(AtomicProposition(""x1""),Not(LOr(AtomicProposition(""x2""),AtomicProposition(""x3""))))))"
It had always been the case that x1 had been true and x2 had been true until x1 had been true and then x2 had remained true.,"x1: x1, x2: x2",H(x1) & (x2 S x1) & H(x2),"LAnd(LAnd(Historically(AtomicProposition(""x1"")),Since(AtomicProposition(""x2""), AtomicProposition(""x1""))),Historically(AtomicProposition(""x2"")))"
"If x1, x2 had eventually been true, then it had always been the case that if x1 had been true then x2 had been true, and vice versa.","x1: x1, x2: x2",(Y(x1 & x2)) -> H((x1 -> x2) & (x2 -> x1)),"LImplies(Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Historically(LAnd(LImplies(AtomicProposition(""x1""),AtomicProposition(""x2"")),LImplies(AtomicProposition(""x2""),AtomicProposition(""x1"")))))"
"It had always been the case that if x1 had been true, then in the previous state x1 had been false; and if x1 had been false, then in the previous state x1 had been true.",x1: x1,H((x1 -> Y(!x1)) & (!x1 -> Y(x1))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1"")))))"
"Eventually, it had always been the case that if x1 had been true, then in the two previous states x1 had been true and then false.",x1: x1,Y(H(x1 -> (Y(x1) & Y(Y(!x1))))),"Yesterday(Historically(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(AtomicProposition(""x1"")),Yesterday(Yesterday(Not(AtomicProposition(""x1""))))))))"
Eventually x1 had been true if and only if x2 had been false in the previous state or x2 had always been true.,"x1: x1, x2: x2",Y(x1 <-> (Y(!x2) | H(x2))),"Yesterday(LEquiv(AtomicProposition(""x1""),LOr(Yesterday(Not(AtomicProposition(""x2""))),Historically(AtomicProposition(""x2"")))))"
"It had always been the case that if x2 had been true, then x1 had not been true at any point; and if x3 had been true, then x2 had not been true at any point.","x1: x1, x2: x2, x3: x3",H((x2 -> !Y(x1)) & (x3 -> !Y(x2))),"Historically(LAnd(LImplies(AtomicProposition(""x2""),Not(Yesterday(AtomicProposition(""x1"")))),LImplies(AtomicProposition(""x3""),Not(Yesterday(AtomicProposition(""x2""))))))"
"If x1 and x2 had been true, then x3 had been true in the previous state and false two steps back.","x1: x1, x2: x2, x3: x3",(x1 & x2) -> (Y(x3) & Y(Y(!x3))),"LImplies(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),LAnd(Yesterday(AtomicProposition(""x3"")),Yesterday(Yesterday(Not(AtomicProposition(""x3""))))))"
"If x1 had been true, then in the previous state x1 had been true, and the state before that as well.",x1: x1,x1 -> (Y(x1) & Y(Y(x1))),"LImplies(AtomicProposition(""x1""),LAnd(Yesterday(AtomicProposition(""x1"")),Yesterday(Yesterday(AtomicProposition(""x1"")))))"
"It had always been the case that if x1 had been true, then x2 and x3 had been false, and if x2 or x3 had been true, then x1 had been false.","x1: x1, x2: x2, x3: x3",H((x1 -> !x2 & !x3) & ((x2 | x3) -> !x1)),"Historically(LAnd(LImplies(AtomicProposition(""x1""),LAnd(Not(AtomicProposition(""x2"")),Not(AtomicProposition(""x3"")))),LImplies(LOr(AtomicProposition(""x2""),AtomicProposition(""x3"")),Not(AtomicProposition(""x1"")))))"
"It had always been the case that if x1 had been true, then in the previous state x2 had been true and two steps back x3 had been false.","x1: x1, x2: x2, x3: x3",H(x1 -> (Y(x2) & Y(Y(!x3)))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(AtomicProposition(""x2"")),Yesterday(Yesterday(Not(AtomicProposition(""x3"")))))))"
"If x1, x2, and x3 had eventually been true, then x4 had been true; otherwise, x4 had been false.","x1: x1, x2: x2, x3: x3",(Y(x1 & x2 & x3) -> x4) & (!Y(x1 & x2 & x3) -> !x4),"LAnd(LImplies(Yesterday(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3""))),AtomicProposition(""x4"")),LImplies(Not(Yesterday(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3"")))),Not(AtomicProposition(""x4""))))"
"It had always been the case that if x1 had been false, then x2 had been false, and if x2 had been false, then x1 had been false. Eventually, x1 and x2 had been true.","x1: x1, x2: x2",H((!x1 -> !x2) & (!x2 -> !x1)) & Y(x1 & x2),"LAnd(Historically(LAnd(LImplies(Not(AtomicProposition(""x1"")),Not(AtomicProposition(""x2""))),LImplies(Not(AtomicProposition(""x2"")),Not(AtomicProposition(""x1""))))),Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))"
"It was never the case that if x1 was true then x2 and x3 were not true, but only after x4 was true (which happened).","x1: x1, x2: x2, x3: x3, x4: x4",O(x4) & H(x1 -> (O(x4) -> (x2 & x3))),"LAnd(Once(AtomicProposition(""x4"")),Historically(LImplies(AtomicProposition(""x1""),LImplies(Once(AtomicProposition(""x4"")),LAnd(AtomicProposition(""x2""),AtomicProposition(""x3""))))))"
x1 started true and was true exactly every third state,x1: x1,x1 & H((x1 -> Y(Y(Y(x1)))) & (!x1 -> (!Y(x1) & !Y(Y(x1))))),"LAnd(AtomicProposition(""x1""),Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Yesterday(Yesterday(AtomicProposition(""x1""))))),LImplies(Not(AtomicProposition(""x1"")),LAnd(Not(Yesterday(AtomicProposition(""x1""))),Not(Yesterday(Yesterday(AtomicProposition(""x1"")))))))))"
"For a while, it was never the case that x1 was true and x2 was false at the same time, but after a certain point, x2 was always true.","x1: x1, x2: x2",O(H(x2)) & O(H(x1 -> x2)),"LAnd(Once(Historically(AtomicProposition(""x2""))),Once(Historically(LImplies(AtomicProposition(""x1""),AtomicProposition(""x2"")))))"
"Whenever x1 was true, x1 was false and x2 was true in the state after; whenever x2 was true, x1 was false and x1 was true in the state after","x1: x1, x2: x2",H((x1 -> Y(!x1 & x2)) & (x2 -> Y(!x1 & x1))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(LAnd(Not(AtomicProposition(""x1"")),AtomicProposition(""x2"")))),LImplies(AtomicProposition(""x2""),Yesterday(LAnd(Not(AtomicProposition(""x1"")),AtomicProposition(""x1""))))))"
x3 was true if and only if x1 and x2 were true in the previous state and x1 and x2 were eventually true.,"x1: x1, x2: x2, x3: x3",H(x3 <-> (Y(x1 & x2) & O(x1 & x2))),"Historically(LEquiv(AtomicProposition(""x3""),LAnd(Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))))"
x1 was sometimes true until x2 was true and was false after (x1),"x1: x1, x2: x2",(!x2 S (x1 & !x2)) & H(x2 -> !x1),"LAnd(Since(Not(AtomicProposition(""x2"")), LAnd(AtomicProposition(""x1""),Not(AtomicProposition(""x2"")))),Historically(LImplies(AtomicProposition(""x2""),Not(AtomicProposition(""x1"")))))"
"It always held that after x1 was true, x2 was true. x3 was not true until both x1 and x2 were true.","x1: x1, x2: x2, x3: x3",H(x1 -> Y(x2)) & (!(x1 & x2) S !x3),"LAnd(Historically(LImplies(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x2"")))),Since(Not(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))), Not(AtomicProposition(""x3""))))"
"if (x1 and x2) were true at some point, then x1 was false until it was true. Otherwise, if x2 was true at some point, then x1 was also true at some point.","x1: x1, x2: x2",(O(x1 & x2) -> ((!x1) S x1)) & (!O(x1 & x2) -> (O(x2) -> O(x1))),"LAnd(LImplies(Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1""))),LImplies(Not(Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")))),LImplies(Once(AtomicProposition(""x2"")),Once(AtomicProposition(""x1"")))))"
"Given states x1, x2, and x3: always transitioned in a cycle (ex. x1 -> x2 -> x3 -> x1 ...)","x1: x1, x2: x2, x3: x3",H((x1 -> Y(x3)) & (x2 -> Y(x1)) & (x3 -> Y(x2))),"Historically(LAnd(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x3""))),LImplies(AtomicProposition(""x2""),Yesterday(AtomicProposition(""x1"")))),LImplies(AtomicProposition(""x3""),Yesterday(AtomicProposition(""x2"")))))"
"if x1 was never true, then x2 and x3 always alternated which was true, with only one being true at a time.","x1: x1, x2: x2, x3: x3",H(!x1) -> H((x2 <-> !x3) & (x2 -> Y(x3)) & (x3 -> Y(x2))),"LImplies(Historically(Not(AtomicProposition(""x1""))),Historically(LAnd(LAnd(LEquiv(AtomicProposition(""x2""),Not(AtomicProposition(""x3""))),LImplies(AtomicProposition(""x2""),Yesterday(AtomicProposition(""x3"")))),LImplies(AtomicProposition(""x3""),Yesterday(AtomicProposition(""x2""))))))"
"If x1 was always true, then x2 was always true until x3 was false","x1: x1, x2: x2, x3: x3",H(x1) -> (x2 S !x3),"LImplies(Historically(AtomicProposition(""x1"")),Since(AtomicProposition(""x2""), Not(AtomicProposition(""x3""))))"
"x2 and x3 became true on the same step, x1 became true the step after x2 became true, x4 was true until x1 was true, x2 was true at some point","x1: x1, x2: x2, x3: x3",O(x2 & x3) & H(Y(x2) -> x1) & (x4 S x1) & O(x2),"LAnd(LAnd(LAnd(Once(LAnd(AtomicProposition(""x2""),AtomicProposition(""x3""))),Historically(LImplies(Yesterday(AtomicProposition(""x2"")),AtomicProposition(""x1"")))),Since(AtomicProposition(""x4""), AtomicProposition(""x1""))),Once(AtomicProposition(""x2"")))"
a held at most two timestamps,a : a,!O(Y(O(Y(O(a))))),"Not(Once(Yesterday(Once(Yesterday(Once(AtomicProposition(""a"")))))))"
a could only hold every three timestamps,a : a,H(a -> !Y(a) & !Y(Y(a)) & Y(Y(Y(a)))),"Historically(LImplies(AtomicProposition(""a""),LAnd(LAnd(Not(Yesterday(AtomicProposition(""a""))),Not(Yesterday(Yesterday(AtomicProposition(""a""))))),Yesterday(Yesterday(Yesterday(AtomicProposition(""a"")))))))"
"Blue was on in 1, off in 2, and alternated evermore",x1: x1,x1 & Y(!x1) & H(Y(Y(x1 <-> Y(Y(x1))))),"LAnd(LAnd(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),Historically(Yesterday(Yesterday(LEquiv(AtomicProposition(""x1""),Yesterday(Yesterday(AtomicProposition(""x1""))))))))"
An upwards travelling lift at the second floor did not change its direction when it had passengers wishing to go to the fifth floor,"“At the second floor” :  x1, “going up” : x2, “button pressed for fifth floor” : x3, “arrive at the fifth floor” : x4",H((x1 & x2 & x3) -> (x2 S x4)),"Historically(LImplies(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3"")),Since(AtomicProposition(""x2""), AtomicProposition(""x4""))))"
"It always held that if x1 was true, x1 was false at the next state, and it was always true that if x1 was false, x1 was true at the next state",x1: x1,H((x1 -> Y(!x1)) & (!x1 -> Y(x1))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1"")))))"
"if x1 was true in any state, then it was true in the previous state, and true in the state before that, and false in the state before that",x1: x1,H(x1 -> Y(x1 & Y(x1 & Y(!x1)))),"Historically(LImplies(AtomicProposition(""x1""),Yesterday(LAnd(AtomicProposition(""x1""),Yesterday(LAnd(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))))))))"
it was always the case that x1 was true until x1 was false and x1 was false until x1 was true at some point,x1: x1,H(x1 S !x1) & O(!x1 S x1),"LAnd(Historically(Since(AtomicProposition(""x1""), Not(AtomicProposition(""x1"")))),Once(Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1""))))"
"at some point, if x1 was true then in the state before the previous state it was always the case that x1 was false or x1 was always false",x1: x1,O(x1 -> H(Y(Y(!x1)))) | H(!x1),"LOr(Once(LImplies(AtomicProposition(""x1""),Historically(Yesterday(Yesterday(Not(AtomicProposition(""x1""))))))),Historically(Not(AtomicProposition(""x1""))))"
at some point it was always the case that if x1 was true then in the previous state x1 was false and always if x1 was false then in the previous state x1 was true,x1: x1,O(H((x1 -> Y(!x1)) & (!x1 -> Y(x1)))),"Once(Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1""))))))"
it was always the case that x1 or x2 were true and x1 was true until x2 was true and x2 was true until x1 was true,"x1: x1, x2: x2",H(x1 | x2) & H(x1 S x2) & H(x2 S x1),"LAnd(LAnd(Historically(LOr(AtomicProposition(""x1""),AtomicProposition(""x2""))),Historically(Since(AtomicProposition(""x1""), AtomicProposition(""x2"")))),Historically(Since(AtomicProposition(""x2""), AtomicProposition(""x1""))))"
it was always the case that if x1 was true then before that x2 or x3 were true and always if x1 was true then x2 or x3 were false,"x1: x1, x2: x2, x3: x3",H(x1 -> Y(x2 | x3)) & H(x1 -> !(x2 | x3)),"LAnd(Historically(LImplies(AtomicProposition(""x1""),Yesterday(LOr(AtomicProposition(""x2""),AtomicProposition(""x3""))))),Historically(LImplies(AtomicProposition(""x1""),Not(LOr(AtomicProposition(""x2""),AtomicProposition(""x3""))))))"
it was always the case that x1 was true and always x2 was true until x1 was true and eventually x2 remained true,"x1: x1, x2: x2",H(x1) & H(x2 S x1) & O(H(x2)),"LAnd(LAnd(Historically(AtomicProposition(""x1"")),Historically(Since(AtomicProposition(""x2""), AtomicProposition(""x1"")))),Once(Historically(AtomicProposition(""x2""))))"
if at some point x1 and x2 were true then always if x1 was true then x2 was true and if x2 was true then x1 was true,"x1: x1, x2: x2",O(x1 & x2) -> H((x1 -> x2) & (x2 -> x1)),"LImplies(Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Historically(LAnd(LImplies(AtomicProposition(""x1""),AtomicProposition(""x2"")),LImplies(AtomicProposition(""x2""),AtomicProposition(""x1"")))))"
it was always the case that if x1 was true then in the previous state x1 was false and if x1 was false then in the previous state x1 was true,x1: x1,H((x1 -> Y(!x1)) & (!x1 -> Y(x1))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1"")))))"
at some point it was always the case that if x1 was true then in the previous state x1 was true and in the state before the previous state x1 was false and always if x1 was false then in the previous state x1 was false and then state before the previous state x1 was true,x1: x1,O(H((x1 -> (Y(x1) & Y(Y(!x1)))) & (!x1 -> (Y(!x1) & Y(Y(x1)))))),"Once(Historically(LAnd(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(AtomicProposition(""x1"")),Yesterday(Yesterday(Not(AtomicProposition(""x1"")))))),LImplies(Not(AtomicProposition(""x1"")),LAnd(Yesterday(Not(AtomicProposition(""x1""))),Yesterday(Yesterday(AtomicProposition(""x1""))))))))"
at some point x1 was true if and only if in the previous state x2 was false or it was always the case that x2 was true,"x1: x1, x2: x2",O(x1 <-> (Y(!x2) | H(x2))),"Once(LEquiv(AtomicProposition(""x1""),LOr(Yesterday(Not(AtomicProposition(""x2""))),Historically(AtomicProposition(""x2"")))))"
it was always the case that if x2 was true then it was not the case that x1 was ever true and if x3 was true then it was not the case that x2 was ever true,"x1: x1, x2: x2, x3: x3",H((x2 -> !O(x1)) & (x3 -> !O(x2))),"Historically(LAnd(LImplies(AtomicProposition(""x2""),Not(Once(AtomicProposition(""x1"")))),LImplies(AtomicProposition(""x3""),Not(Once(AtomicProposition(""x2""))))))"
if x1 and x2 were true then in the previous state x3 was true and in the state before the previous state x3 was false,"x1: x1, x2: x2, x3: x3",H((x1 & x2) -> (Y(x3) & Y(Y(!x3)))),"Historically(LImplies(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),LAnd(Yesterday(AtomicProposition(""x3"")),Yesterday(Yesterday(Not(AtomicProposition(""x3"")))))))"
if x1 was true then in the previous state x1 was true and if in the previous state x1 was true then in the state before the previous state x1 was true,x1: x1,H(x1 -> Y(x1)) & H(Y(x1) -> Y(Y(x1))),"LAnd(Historically(LImplies(AtomicProposition(""x1""),Yesterday(AtomicProposition(""x1"")))),Historically(LImplies(Yesterday(AtomicProposition(""x1"")),Yesterday(Yesterday(AtomicProposition(""x1""))))))"
it was always the case that if x1 was true then x2 was false and x3 was false and it was always the case that if x2 or x3 was true then x1 was false,"x1: x1, x2: x2, x3: x3",H((x1 -> (!x2 & !x3)) & ((x2 | x3) -> !x1)),"Historically(LAnd(LImplies(AtomicProposition(""x1""),LAnd(Not(AtomicProposition(""x2"")),Not(AtomicProposition(""x3"")))),LImplies(LOr(AtomicProposition(""x2""),AtomicProposition(""x3"")),Not(AtomicProposition(""x1"")))))"
it was always the case that if x1 was true then in the previous state x2 was true and in the state before the previous state x3 was false,"x1: x1, x2: x2, x3: x3",H(x1 -> (Y(x2) & Y(Y(!x3)))),"Historically(LImplies(AtomicProposition(""x1""),LAnd(Yesterday(AtomicProposition(""x2"")),Yesterday(Yesterday(Not(AtomicProposition(""x3"")))))))"
"if at some point x1, x2 and x3 were true then x4 was true and if it was not the case that at some point x1, x2 and x3 were true then x4 was false","x1: x1, x2: x2, x3: x3, x4: x4",(O(x1 & x2 & x3) -> x4) & (!O(x1 & x2 & x3) -> !x4),"LAnd(LImplies(Once(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3""))),AtomicProposition(""x4"")),LImplies(Not(Once(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),AtomicProposition(""x3"")))),Not(AtomicProposition(""x4""))))"
it was always the case that if x1 was false then x2 was false and if x2 was false then x1 was false. and at some point x1 and x2 were true,"x1: x1, x2: x2",H((!x1 -> !x2) & (!x2 -> !x1)) & O(x1 & x2),"LAnd(Historically(LAnd(LImplies(Not(AtomicProposition(""x1"")),Not(AtomicProposition(""x2""))),LImplies(Not(AtomicProposition(""x2"")),Not(AtomicProposition(""x1""))))),Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))"
"x3 had been true if and only if x1 and x2 had been true in the previous state, and x1 and x2 had been true at some point earlier.","x1: x1, x2: x2, x3: x3",H(x3 <-> (Y(x1 & x2) & Y(x1 & x2))),"Historically(LEquiv(AtomicProposition(""x3""),LAnd(Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))))"
"x1 had sometimes been true until x2 became true, and must have been false afterward.","x1: x1, x2: x2",(x1 S !x2) & H(x2 -> !x1),"LAnd(Since(AtomicProposition(""x1""), Not(AtomicProposition(""x2""))),Historically(LImplies(AtomicProposition(""x2""),Not(AtomicProposition(""x1"")))))"
"It had always been the case that once x1 had been true, x2 became true. x3 had not been true until both x1 and x2 had been true.","x1: x1, x2: x2",H((Y(x1) -> x2) & (x3 S (x1 & x2))),"Historically(LAnd(LImplies(Yesterday(AtomicProposition(""x1"")),AtomicProposition(""x2"")),Since(AtomicProposition(""x3""), LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")))))"
"If (x1 and x2) had been true at some point, then x1 had been false until it became true. Otherwise, if x2 had been true, x1 had eventually been true.","x1: x1, x2: x2",((Y(x1 & x2)) -> (!x1 S x1)) & ((Y(x2)) -> Y(x1)),"LAnd(LImplies(Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1""))),LImplies(Yesterday(AtomicProposition(""x2"")),Yesterday(AtomicProposition(""x1""))))"
"It had always been the case that if x1 had been true, it had been false in the previous state, and vice versa.",x1: x1,H((x1 -> Y(!x1)) & (!x1 -> Y(x1))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(Not(AtomicProposition(""x1"")))),LImplies(Not(AtomicProposition(""x1"")),Yesterday(AtomicProposition(""x1"")))))"
The pattern of truth and falsity of x1 in the first 3 entries had repeated in the past.,x1: x1,Y(Y(x1 <-> Y(Y(x1)))),"Yesterday(Yesterday(LEquiv(AtomicProposition(""x1""),Yesterday(Yesterday(AtomicProposition(""x1""))))))"
"For a while, it had never been the case that x1 was true while x2 was false at the same time, but after some point, x2 had always been true.","x1: x1, x2: x2",H((x1 -> x2)) S (H(x2)),"Since(Historically(LImplies(AtomicProposition(""x1""),AtomicProposition(""x2""))), Historically(AtomicProposition(""x2"")))"
"Whenever x1 had been true, it had been false and x2 had been true in the state before; whenever x2 had been true, x1 had been false and x1 had been true in the state before.","x1: x1, x2: x2",H((x1 -> (Y(!x1 & x2))) & (x2 -> (Y(!x1 & x1)))),"Historically(LAnd(LImplies(AtomicProposition(""x1""),Yesterday(LAnd(Not(AtomicProposition(""x1"")),AtomicProposition(""x2"")))),LImplies(AtomicProposition(""x2""),Yesterday(LAnd(Not(AtomicProposition(""x1"")),AtomicProposition(""x1""))))))"
"It was never false that if x1 was true, then x2 and x3 were true, but only after x4 was true.","x1: x1, x2: x2, x3: x3, x4: x4",H (x4 -> H (x1 -> (x2 & x3))),"Historically(LImplies(AtomicProposition(""x4""),Historically(LImplies(AtomicProposition(""x1""),LAnd(AtomicProposition(""x2""),AtomicProposition(""x3""))))))"
x1 was initially true and was true exactly every third state.,x1: x1,x1 & H (x1 -> (!x1 S (!x1 S x1))),"LAnd(AtomicProposition(""x1""),Historically(LImplies(AtomicProposition(""x1""),Since(Not(AtomicProposition(""x1"")), Since(Not(AtomicProposition(""x1"")), AtomicProposition(""x1""))))))"
"Whenever x1 was true, in the next state, x1 was false and x2 was true.","x1: x1, x2: x2",H (x1 -> (Y(!x1 & x2))),"Historically(LImplies(AtomicProposition(""x1""),Yesterday(LAnd(Not(AtomicProposition(""x1"")),AtomicProposition(""x2"")))))"
Either x1 and x2 were true every 5th step or x3 was true every 3rd step.,"x1: x1, x2: x2, x3: x3",H ( (O (x1 & x2 & Y(!(x1 & x2) S(x1 & x2)))) | (O(x3 & Y(!x3 S x3))) ),"Historically(LOr(Once(LAnd(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")),Yesterday(Since(Not(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))), LAnd(AtomicProposition(""x1""),AtomicProposition(""x2"")))))),Once(LAnd(AtomicProposition(""x3""),Yesterday(Since(Not(AtomicProposition(""x3"")), AtomicProposition(""x3"")))))))"
x3 was true if and only if x1 and x2 were true in the previous state and x1 and x2 had been true at some point.,"x1: x1, x2: x2, x3: x3",H (x3 <-> (Y(x1 & x2) & O (x1 & x2))),"Historically(LEquiv(AtomicProposition(""x3""),LAnd(Yesterday(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))),Once(LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))))"
"x1 was sometimes true until x2 became true, and then x1 was false afterward.","x1: x1, x2: x2",(O x1) S (x2 & H (!x1)),"Since(Once(AtomicProposition(""x1"")), LAnd(AtomicProposition(""x2""),Historically(Not(AtomicProposition(""x1"")))))"
"It always held that after x1 was true, x2 was true. x3 was not true until both x1 and x2 had been true.","x1: x1, x2: x2, x3: x3",H (x1 -> F x2) & (!x3 S (x1 & x2)),"LAnd(Historically(LImplies(AtomicProposition(""x1""),Eventually(AtomicProposition(""x2"")))),Since(Not(AtomicProposition(""x3"")), LAnd(AtomicProposition(""x1""),AtomicProposition(""x2""))))"
"If x1 was never true, then x2 and x3 alternated, with only one true at a time.","x1: x1, x2: x2, x3: x3",H (!x1) -> H ( (x2 -> P !x3) & (x3 -> P !x2) ),ERROR
"If x1 was always true, then x2 was always true until x3 became false.","x1: x1, x2: x2, x3: x3",H (x1) -> (x2 S !x3),"LImplies(Historically(AtomicProposition(""x1"")),Since(AtomicProposition(""x2""), Not(AtomicProposition(""x3""))))"
"The robot went to the cafe on Main street, then stopped by a bank, then went to McDonald’s, but only after visiting the bank.","""Cafe"" : x1, ""bank"" : x2, ""McDonald's"" : x3",(x1 & !x2 & !x3) S (x2 & !x3) S x3,"Since(LAnd(LAnd(AtomicProposition(""x1""),Not(AtomicProposition(""x2""))),Not(AtomicProposition(""x3""))), Since(LAnd(AtomicProposition(""x2""),Not(AtomicProposition(""x3""))), AtomicProposition(""x3"")))"
